<?php

declare(strict_types=1);

namespace Jefferson49\Webtrees\Module\ExtendedImportExport;

use Fisharebest\Webtrees\Auth;
use Fisharebest\Webtrees\Encodings\ANSEL;
use Fisharebest\Webtrees\Encodings\ASCII;
use Fisharebest\Webtrees\Encodings\UTF16BE;
use Fisharebest\Webtrees\Encodings\UTF8;
use Fisharebest\Webtrees\FlashMessages;
use Fisharebest\Webtrees\I18N;
use Fisharebest\Webtrees\Services\ModuleService;
use Fisharebest\Webtrees\Tree;
use Fisharebest\Webtrees\View;
use Jefferson49\Webtrees\Internationalization\MoreI18N;


/**
 * @var  string  $title,
 * @var  Tree    $tree,
 * @var  bool    $export_clippings_cart,
 * @var  bool    $zip_available
 * @var  string  $action
 * @var  string  $format
 * @var  string  $encoding
 * @var  string  $endings
 * @var  string  $privacy
 * @var  string  $time_stamp
 * @var  string  $GEDBAS_Id
 * @var  string  $GEDBAS_description
 * @var  array   $gedcom_filter_list
 * @var  string  $gedcom_filter1
 * @var  string  $gedcom_filter2
 * @var  string  $gedcom_filter3
 */

$module_service               = New ModuleService();
$download_gedcom_with_url     = $module_service->findByName(DownloadGedcomWithURL::activeModuleName());
$gedbas_communication_success = false;

$filename = $export_clippings_cart ? 'clippings' : $tree->name();

// Force a ".ged" suffix
if (strtolower(pathinfo($filename, PATHINFO_EXTENSION)) === 'ged') {
	$export_file_name  = substr($filename, 0, -4);
} else {
	$export_file_name = $filename;
}

$export_options = [
	DownloadGedcomWithURL::ACTION_DOWNLOAD => MoreI18N::xlate('Download'),
	DownloadGedcomWithURL::ACTION_SAVE     => I18N::translate('Save on the webtrees server'),
	DownloadGedcomWithURL::ACTION_BOTH     => I18N::translate('Both, i.e. download and save in parallel'),
];

// GEDBAS settings 
$gedbas_upload_allowed = boolval($download_gedcom_with_url->getPreference(DownloadGedcomWithURL::PREF_ALLOW_GEDBAS_UPLOAD, '0') === '1');

if ($gedbas_upload_allowed) {

	$GEDBAS_databases = [];
	$GEDBAS_databases[''] = I18N::translate('Create new GEDBAS database');
	$GEDBAS_database_descriptions = [];
	$export_options[DownloadGedcomWithURL::ACTION_GEDBAS] = I18N::translate('Upload to GEDBAS');
	$GEDBAS_apiKey = $tree->getPreference(DownloadGedcomWithURL::TREE_PREF_GEDBAS_APIKEY, '');

	if ($GEDBAS_apiKey !== '') {

		try {
			// Retrieve database information from GEDBAS
			$database_info = $download_gedcom_with_url->getDatabaseInfoFromGEDBAS($GEDBAS_apiKey);
			$gedbas_communication_success = true;

			foreach ($database_info as $database) {
				if (isset($database['id']) && isset($database['title'])) {
					$GEDBAS_databases[$database['id']] = $database['id'] . ' (' . $database['title'] . ')';
					$GEDBAS_database_descriptions[$database['id']] = $database['description'];
				}
			}

			//Retrieve GEDBAS database description
			if ($GEDBAS_Id !== '' && isset($GEDBAS_database_descriptions[$GEDBAS_Id]) && $GEDBAS_database_descriptions[$GEDBAS_Id] !== '' ) {		
				$GEDBAS_description = $GEDBAS_database_descriptions[$GEDBAS_Id];
			}

			//Reset GEDBAS_Id if invalid
			if (!isset($GEDBAS_databases[$GEDBAS_Id])) {				
				$GEDBAS_Id = '';
				$tree->setPreference(DownloadGedcomWithURL::TREE_PREF_GEDBAS_ID, '');
			}
		}
		catch (GEDBASCommunicationException $e) {
			$gedbas_communication_success = false;
			FlashMessages::addMessage(I18N::translate('Could not retrieve database information from GEDBAS'), 'warning');
		}
	}

	// Create default description if no GEDBAS description is available
	if ($GEDBAS_description === '') {
		$GEDBAS_description = $download_gedcom_with_url->createGEDBASdescription($tree);
	}
}

?>

<?= view('components/breadcrumbs', ['links' => [route(SelectionPage::class, ['tree' => $tree->name()]) => I18N::translate('Extended Import/Export'), e($title)]]) ?>

<h1><?= $title ?></h1>
<div class="row mb-3"><?= view('icons/spacer') ?></div>

<form method="post" id="export-form" action="<?= e(route(DownloadGedcomWithURL::class)) ?>" enctype="multipart/form-data">
	<?= csrf_field() ?>
	<input type="hidden" name="tree" id="tree" value="<?= $tree->name() ?>">
	<input type="hidden" name="export_clippings_cart" id="export_clippings_cart" value="<?= $export_clippings_cart ? '1' : '0' ?>">
	<input type="hidden" name="called_from_control_panel" id="called_from_control_panel" value="1">
	<input type="hidden" name="reload_form" id="reload_form" value="0">

	<div class="row mb-3">
		<label class="col-sm-3" for="format">
			<?= MoreI18N::xlate('Format') ?>
		</label>

		<div class="col-sm-9">
			<div class="form-check">
				<input class="form-check-input" type="radio" name="format" id="format-gedcom" value="gedcom" <?= $format === 'gedcom' ? 'checked="checked"' : '' ?> data-wt-extension=".ged">

				<label class="form-check-label" for="format-gedcom">
					<?= MoreI18N::xlate('GEDCOM') ?>
				</label>
			</div>

			<div class="form-check">
				<input class="form-check-input" type="radio" name="format" id="format-zip" value="zip" <?= $format === 'zip' ? 'checked="checked"' : '' ?> data-wt-extension=".zip" <?= $zip_available ? '' : 'disabled="disabled"'?>>

				<label class="form-check-label" for="format-zip">
					<?= /* I18N: ZIP = file format */ MoreI18N::xlate('ZIP') ?>
				</label>
			</div>

			<div class="form-check">
				<input class="form-check-input" type="radio" name="format" id="format-zipmedia" value="zipmedia" <?= $format === 'zipmedia' ? 'checked="checked"' : '' ?> data-wt-extension=".zip" <?= $zip_available ? '' : 'disabled="disabled"'?>>

				<label class="form-check-label" for="format-zipmedia">
					<?= /* I18N: ZIP = file format */ MoreI18N::xlate('ZIP') ?>
					<?= MoreI18N::xlate('(includes media files)') ?>
				</label>
			</div>

			<div class="form-check">
				<input class="form-check-input" type="radio" name="format" id="format-gdz" value="gedzip" <?= $format === 'gedzip' ? 'checked="checked"' : '' ?> data-wt-extension=".gdz" <?= $zip_available ? '' : 'disabled="disabled"'?>>

				<label class="form-check-label" for="format-gdz">
					<?= /* I18N: GEDZIP = file format */ MoreI18N::xlate('GEDZIP') ?>
					<?= MoreI18N::xlate('(includes media files)') ?>
				</label>
			</div>

			<div class="form-check">
				<input class="form-check-input" type="radio" name="format" id="format-other" value="other" <?= $format === 'other' ? 'checked="checked"' : '' ?> data-wt-extension=""'?>
				<label class="form-check-label" for="format-other">
					<?= I18N::translate('Other format (i.e. use extension of filename)') ?>
				</label>
			</div>
		</div>
	</div>

	<div class="row mb-3">
		<label class="col-sm-3" for="filename">
			<?= MoreI18N::xlate('Filename') ?>
		</label>

		<div class="col-sm-9">
			<div class="input-group">
				<input class="form-control" id="filename" name="filename" type="text" value="<?= $export_file_name ?>">
				<span class="input-group-text" id="extension">.ged</span>
				</div>
			<div class="form-text">
				<?= I18N::translate('The file extension will be added (or overruled) according to the selected format. Select "Other format" to use the extension, which is provided within the filename.'); ?>
			</div>
		</div>
	</div>

	<div class="row mb-3">
		<label class="col-sm-3" for="encoding">
			<?= MoreI18N::xlate('Character encoding') ?>
		</label>

		<div class="col-sm-9">
			<?= view('components/select', [
				'name'     => 'encoding',
				'id'       => 'encoding',
				'selected' => $encoding,
				'options'  => [UTF8::NAME => 'UTF-8', UTF16BE::NAME => 'UNICODE (UTF16-BE)', ANSEL::NAME => 'ANSEL', ASCII::NAME => 'ASCII', 'CP1252' => 'ANSI (CP1252)'],
				]) ?>
		</div>
	</div>

	<div class="row mb-3">
		<label class="col-sm-3" for="line_endings">
			<?= MoreI18N::xlate('Line endings') ?>
		</label>

		<div class="col-sm-9">
			<?= view('components/radios-inline', [
				'name'     => 'line_endings',
				'options'  => ['CRLF' => 'CR/LF (windows)', 'LF' => 'LF (unix)'],
				'selected' => $endings,
				]) ?>
		</div>
	</div>

	<div class="row mb-3">
		<label class="col-sm-3" for="privacy">
			<?= MoreI18N::xlate('Apply privacy settings') ?>
		</label>
		<div class="col-sm-9">
			<?= view('components/radios-inline', ['name' => 'privacy','selected' => $privacy, 
				'options' => [
					'none'     => 'none (' . MoreI18N::xlate('None') .')', 
					'gedadmin' => 'gedadmin (' . MoreI18N::xlate('Manager') .')', 
					'user'     => 'user (' . MoreI18N::xlate('Member') .')',  
					'visitor'  => 'visitor (' . MoreI18N::xlate('Visitor') .')', 
				]
			]) ?>
		</div>
	</div>

	<fieldset class="mb-3">
		<div class="row">
			<legend class="col-form-label col-sm-3">
				<?= I18N::translate('Time stamp') ?>
			</legend>
			<div class="col-sm-9">
				<?= view('components/radios-inline', ['name' => 'time_stamp', 'selected' => $time_stamp,
					'options' => [
						DownloadGedcomWithURL::TIME_STAMP_NONE    => DownloadGedcomWithURL::TIME_STAMP_NONE    . ' (' . I18N::translate('No time stamp') . ')',
						DownloadGedcomWithURL::TIME_STAMP_PREFIX  => DownloadGedcomWithURL::TIME_STAMP_PREFIX  . ' (' .  I18N::translate('Prefix time stamp') . ')',
						DownloadGedcomWithURL::TIME_STAMP_POSTFIX => DownloadGedcomWithURL::TIME_STAMP_POSTFIX . ' (' . I18N::translate('Postfix time stamp') . ')',
					] 
				]) ?>
			</div>
		</div>
	</fieldset>		

	<div class="h4">
		<?= I18N::translate('Export action') ?>
	</div>
	<fieldset class="mb-3">
		<div class="row">
			<legend class="col-form-label col-sm-3">
				<?= I18N::translate('Action') ?>
			</legend>
			<div class="col-sm-9">
				<?= view('components/radios-inline', ['name' => 'action', 'selected' => $action, 'options' => $export_options]) ?>
			</div>
		</div>
	</fieldset>
	<?php if (Auth::isAdmin() && $gedbas_upload_allowed) : ?>
		<div id="GEDBAS_parameters" <?= $action !== DownloadGedcomWithURL::ACTION_GEDBAS ? 'style="display:none;"' : '' ?></div>
			<div class="row mb-3">
				<label class="col-sm-3 col-form-label wt-page-options-label" for="GEDBAS_apiKey">
					<?= I18N::translate('GEDBAS API key') ?>
				</label>
				<div class="col-sm-9 wt-page-options-value">
					<input class="form-control" id="GEDBAS_apiKey" name="GEDBAS_apiKey" type="text" value="<?= e($GEDBAS_apiKey) ?>">
					<div class="form-text">
						<?= I18N::translate('GEDBAS API key, which allows to upload GEDCOM files for a certain GEDBAS account. You can identify your individual key with the following link') . ': ' ?> 
						<a href="https://gedbas.genealogy.net/user/apiKeys"><?= I18N::translate('GEDBAS API key') ?></a>
					</div>
				</div>
			</div>

			<?php if ($GEDBAS_apiKey !== '' && $gedbas_communication_success) : ?>
				<div class="row mb-3">
					<label class="col-sm-3" for="GEDBAS_Id">
						<?= I18N::translate('GEDBAS database Id') ?>
					</label>
					<div class="col-sm-9"  >
						<div id="GEDBAS_Id">
							<?= view('components/select', ['name' => 'GEDBAS_Id', 'selected' => $GEDBAS_Id, 'options' => $GEDBAS_databases]) ?>
						</div>
						<div class="form-text">
							<?= I18N::translate('Select a GEDBAS database, to which the GEDCOM file shall be uploaded or create a new database.'); ?>
						</div>
					</div>
				</div>
				<div class="row mb-3">
					<label class="col-sm-3" for="GEDBAS_description">
						<?= I18N::translate('GEDBAS database description') ?>
					</label>
					<div class="col-sm-9">
						<div class="input-group">
							<input class="form-control" id="GEDBAS_description" name="GEDBAS_description" type="text" value="<?= e($GEDBAS_description) ?>">
							</div>
						<div class="form-text">
							<?= I18N::translate('By default, the GEDBAS database description is generated from HEAD:NOTE or from the tree title. Modify the description according to your needs.'); ?>
						</div>
					</div>
				</div>
			<?php endif ?>
		</div>
	<?php endif ?>
	
	<div class="h4">
		<?= I18N::translate('Select GEDCOM filters') ?>
	</div>
	<div class="row mb-3">
		<label class="col-form-label col-sm-3">
			<?= I18N::translate('Gedcom filter %s', '1') ?>
		</label>
		<div class="col-sm-9">
			<?= view('components/select', [
				'name'     => 'gedcom_filter1',
				'selected' => $gedcom_filter1, 
				'options'  => $gedcom_filter_list,
				]) ?>
		</div>
	</div>		
	<div class="row mb-3">
		<label class="col-form-label col-sm-3">
			<?= I18N::translate('Gedcom filter %s', '2') ?>
		</label>
		<div class="col-sm-9">
			<?= view('components/select', [
				'name'     => 'gedcom_filter2',
				'selected' => $gedcom_filter2, 
				'options'  => $gedcom_filter_list,
				]) ?>
		</div>
	</div>		
	<div class="row mb-3">
		<label class="col-form-label col-sm-3">
			<?= I18N::translate('Gedcom filter %s', '3') ?>
		</label>
		<div class="col-sm-9">
			<?= view('components/select', [
				'name'     => 'gedcom_filter3',
				'selected' => $gedcom_filter3, 
				'options'  => $gedcom_filter_list,
				]) ?>
		</div>
	</div>

	<div class="row mb-3">
		<div class="col">
			<button type="submit" class="btn btn-primary">
				<?= view('icons/download') ?>
				<?= /* I18N: A button label. */
				I18N::translate('Transfer GEDCOM file') ?>
			</button>
		</div>
	</div>		

</form>

<?php View::push('javascript') ?>
<script>
	'use strict';

    $('#action-GEDBAS').change(function() {
		$('#GEDBAS_parameters').show();
    });
    $('#action-download').change(function() {
		$('#GEDBAS_parameters').hide();
    });
    $('#action-save').change(function() {
		$('#GEDBAS_parameters').hide();
    });
    $('#action-both').change(function() {
		$('#GEDBAS_parameters').hide();
    });
	$('#GEDBAS_apiKey').change(function () {
		document.getElementById("reload_form").value = "1";
        $('#export-form').submit();
    });

	document.querySelectorAll('[name=format]').forEach(element => element.addEventListener('change', event => document.getElementById('extension').innerText = event.target.dataset.wtExtension));

	// Firefox will reload the page and change the selected item.
	document.getElementById('extension').innerText = document.querySelector('[name=format]:checked').dataset.wtExtension;
</script>
<?php View::endpush(); ?>
